"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@zhlix/opencv-build"),n=require("npmlog"),i=require("../commons-93fafeec.js");require("child_process");var t=require("os"),o=require("path"),r=require("picocolors");function l(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=l(e),a=l(n),u=l(o),f=l(r);function d(e){const{OPENCV_INCLUDE_DIR:n}=process.env;let o="";n&&(o=i.resolvePath(n));const r=e.isAutoBuildDisabled?o?[o]:function(e){if(a.default.info("install","OPENCV_INCLUDE_DIR is not set, looking for default include dir"),e.isWin)throw new Error("OPENCV_INCLUDE_DIR has to be defined on windows when auto build is disabled");return["/usr/local/include","/usr/local/include/opencv4"]}(e):[i.resolvePath(e.opencvInclude),i.resolvePath(e.opencv4Include)];return a.default.info("install",`${t.EOL}Setting the following includes:`),r.forEach((e=>a.default.info("includes",f.default.green(e)))),r}function c(e){if(e.isAutoBuildDisabled)return i.resolvePath(process.env.OPENCV_LIB_DIR)||function(e){if(a.default.info("install","OPENCV_LIB_DIR is not set, looking for default lib dir"),e.isWin)throw new Error("OPENCV_LIB_DIR has to be defined on windows when auto build is disabled");return"/usr/local/lib"}(e);{const n=i.resolvePath(e.opencvLibDir);if(e.isWin&&n.replace(/\/Release$/,""),!n)throw Error("failed to resolve opencvLibDir path");return n}}a.default.level="silent";const b=()=>{const e=new s.default,n=c(e.env),i=e.getLibs.getLibs().filter((e=>e.libPath));if(!i.length)throw new Error("no OpenCV libraries found in lib dir: "+n);return function(e){const n=e.map((e=>`OPENCV4NODEJS_FOUND_LIBRARY_${e.opencvModule.toUpperCase()}`));a.default.info("defines",`${t.EOL}Setting the following defines:`);const i=Math.max(...n.map((e=>e.length)));let o="";for(const e of n)o.length>80&&(a.default.info("defines",f.default.yellow(o)),o=""),o+=e.padEnd(i+1," ");return o&&a.default.info("defines",f.default.yellow(o)),n}(i).join(";")},p=()=>d(new e.OpenCVBuildEnv).join(";"),E=()=>{const e=new s.default,n=c(e.env),o=e.getLibs.getLibs().filter((e=>e.libPath));if(!o.length)throw new Error("no OpenCV libraries found in lib dir: "+n);return function(e,n,o){const r=e.isWin?o.map((e=>i.resolvePath(e.libPath))):["-L"+n].concat(o.map((e=>"-lopencv_"+e.opencvModule)));if(r.length>0){const e=u.default.dirname(r[0]),n=r.map((e=>u.default.basename(e)));a.default.info("libs",`${t.EOL}Setting lib from ${f.default.green(e)} : ${n.map(f.default.yellow).join(", ")}`)}else a.default.info("libs",`${t.EOL}no Libs available`);return r}(e.env,n,o).join(";")},h=()=>c((new s.default).env),v=process.argv[2];if(!v)throw new Error("没有传递环境名称来解析环境");let w;switch(v){case"OPENCV4NODEJS_DEFINES":w=b();break;case"OPENCV4NODEJS_INCLUDES":w=p();break;case"OPENCV4NODEJS_LIBRARIES":w=E();break;case"OPENCV4NODEJS_LIBRARY_DIR":w=h();break;default:throw new Error("传递的环境名称不符合要求")}w.split(";").filter((e=>e)).forEach((e=>console.log(e))),exports.getDefines=b,exports.getIncludes=p,exports.getLibraries=E,exports.getLibraryDir=h;
